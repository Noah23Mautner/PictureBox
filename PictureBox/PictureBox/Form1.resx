<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>